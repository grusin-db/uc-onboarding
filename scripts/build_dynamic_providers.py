import json
import re
from datetime import datetime
import argparse

if __name__ == "__main__":
  arg_parser = argparse.ArgumentParser()
  arg_parser.add_argument("env_name")
  args = arg_parser.parse_args()
  
  #load current enviroment
  with open(".metadata.tmp/current_environment.json") as json_file:
    env = json.load(json_file)
    if not bool(env['enabled']) or env['name'] != args.env_name:
      raise ValueError(f'Invalid env_name: {args.env_name}')
        
  #create providers / modules
  with open('dynamic-providers.tf', 'w') as out:
    out.write(f"""#
# This file was auto generated by {__file__} script.
# Any changes made to this file will be lost.
#
""")
    
    #configure backend storage for enviroment data
    out.write(f"""#
# configure backend storage for tfstate
#
terraform {{
  backend "azurerm" {{
    subscription_id      = "{env['tf_state_subscription_id']}"
    resource_group_name  = "{env['tf_state_resource_group_name']}"
    storage_account_name = "{env['tf_state_storage_account_name']}"
    container_name       = "{env['tf_state_container_name']}"
    key                  = "env_{env['name']}-terraform.tfstate"
    use_azuread_auth     = true
  }}
}}
  """)

